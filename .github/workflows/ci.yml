name: CI

on:
  push:
    branches:
    - master
  pull_request:
    branches:
    - master
  schedule:
  - cron:  '0 6 * * SAT'

jobs:
  fmt:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - uses: dtolnay/rust-toolchain@nightly
      with:
        components: rustfmt
    - run: cargo fmt --all -- --check

  clippy:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - uses: dtolnay/rust-toolchain@nightly
      with:
        components: clippy
    - run: cargo clippy --all-targets --all-features -- -D warnings

  audit:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - run: cargo install --force cargo-audit
    - run: cargo generate-lockfile
    - run: cargo audit

  check:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - uses: dtolnay/rust-toolchain@nightly
    - run: cargo check --all-targets --all-features --workspace

  doc:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - uses: dtolnay/rust-toolchain@nightly
    - run: cargo doc --all-features --workspace --no-deps

  test:
    needs: [fmt, clippy, audit, check, doc]
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest, macOS-latest]
    steps:
    - uses: actions/checkout@v3
    - uses: dtolnay/rust-toolchain@nightly
    - run: cargo test --all-targets --all-features --workspace

  miri:
    needs: [test]
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - uses: dtolnay/rust-toolchain@nightly
      with:
        components: miri, rust-src
    - run: cargo miri setup
    - run: cargo miri test --all-targets --all-features --workspace util
      env:
        MIRIFLAGS: "-Zmiri-disable-isolation -Zmiri-ignore-leaks -Zmiri-permissive-provenance"
        PROPTEST_CASES: 1
    - run: cargo miri test --all-targets --all-features --workspace nnue
      env:
        RUSTFLAGS: "-Ctarget-cpu=generic"
        MIRIFLAGS: "-Zmiri-disable-isolation -Zmiri-ignore-leaks -Zmiri-permissive-provenance"
        PROPTEST_CASES: 1

  sanitize:
    needs: [test]
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        sanitizer: [address, leak, memory, thread]
    steps:
    - uses: actions/checkout@v3
    - uses: dtolnay/rust-toolchain@nightly
      with:
        components: rust-src
    - run: cargo test --tests --all-features --workspace --target x86_64-unknown-linux-gnu -Z build-std -- --test-threads=1
      env:
        RUSTFLAGS: "-Z sanitizer=${{ matrix.sanitizer }}"

  coverage:
    needs: [test]
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - uses: dtolnay/rust-toolchain@nightly
    - run: cargo install --force cargo-tarpaulin
    - run: cargo tarpaulin --all-features --workspace --engine llvm -o xml
      env:
        PROPTEST_CASES: 32
    - uses: codecov/codecov-action@v3
      with:
        token: ${{secrets.CODECOV_TOKEN}}
        fail_ci_if_error: true
